{"version":3,"file":"static/js/936.d1b4c77f.chunk.js","mappings":"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","sources":["main/libs/math.ts","main/objects/porkchop.ts","main/libs/porkchop-calculator.ts","workers/porkchop.worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["/* Miscellaneous useful functions */\nexport const X_DIR = vec3(1, 0, 0);\nexport const Y_DIR = vec3(0, 1, 0);\nexport const Z_DIR = vec3(0, 0, 1);\n\nexport const TWO_PI = 2 * Math.PI;\nexport const HALF_PI = 0.5 * Math.PI;\n\nexport function linspace(start: number, stop: number, n: number): number[] {\n    n = Math.floor(n);\n\n    if(n === 1) {\n        return [stop]\n    }\n\n    const interval = (stop - start) / (n - 1);\n    const vals: number[] = new Array<number>(n);\n    vals[0] = start;\n    for(let i = 1; i < n; i++) {\n        vals[i] = vals[i-1] + interval;\n    }\n    return vals;\n}\n\nexport function clamp(x: number, min: number, max: number) {\n    return x > max ? max : x < min ? min : x;\n}\n\nexport function degToRad(deg: number) {\n    return deg * Math.PI / 180.0;\n}\n\nexport function radToDeg(rad: number) {\n    return rad * 180.0 / Math.PI;\n}\n\nexport function wrapAngle(angle: number, min: number = 0) {\n    const max = min + TWO_PI;\n    if(min <= angle && angle < max) {\n        return angle;\n    }\n    const circles = Math.floor((angle - min) / TWO_PI);\n    return angle - TWO_PI * circles;\n}\n\nexport function acosClamped(x: number) {\n    return Math.acos(clamp(x, -1, 1));\n}\n\nexport function isnegative(x: number) {\n    return x < 0\n}\n\nexport function copysign(x: number, y: number) {\n    return isnegative(y) ? -x : x;\n}\n\nexport function randomSign(): -1 | 1 {\n    // @ts-ignore\n    return (Math.round(Math.random()) * 2 - 1);\n}\n\nexport function randint(a: number, b: number){\n    return Math.floor(a + Math.random() * (b - a + 1));\n}\n\nexport function lerp(x: number, y: number, t: number) {\n    return x + t * (y - x);\n}\n\n\n/* Functions for manipulating 3D vectors */\n\nexport function vec3(x: number, y: number, z: number) : Vector3 {\n    return {x: x, y: y, z: z};\n}\n\nexport function clone3(v: Vector3): Vector3 {\n    return {x: v.x, y: v.y, z: v.z};\n}\n\nexport function mult3(v: Vector3, f: number) : Vector3 {\n    return {\n        x: v.x * f,\n        y: v.y * f,\n        z: v.z * f\n    };\n}\n\nexport function div3(v: Vector3, f: number) : Vector3 {\n    return {\n        x: v.x / f,\n        y: v.y / f,\n        z: v.z / f\n    };\n}\n\nexport function add3(u: Vector3, v: Vector3) : Vector3 {\n    return {\n        x: u.x + v.x,\n        y: u.y + v.y,\n        z: u.z + v.z\n    };\n}\n\nexport function sub3(u: Vector3, v: Vector3) : Vector3 {\n    return {\n        x: u.x - v.x,\n        y: u.y - v.y,\n        z: u.z - v.z\n    };\n}\n\nexport function dot3(u: Vector3, v: Vector3) {\n    return u.x*v.x + u.y*v.y + u.z*v.z;\n}\n\nexport function cross3(u: Vector3, v:Vector3) : Vector3 {\n    return {\n        x: u.y * v.z - u.z * v.y,\n        y: u.z * v.x - u.x * v.z,\n        z: u.x * v.y - u.y * v.x,\n    };\n}\n\nexport function magSq3(v: Vector3) {\n    return dot3(v, v);\n}\n\nexport function mag3(v: Vector3) {\n    return Math.sqrt(magSq3(v))\n}\n\nexport function normalize3(v: Vector3) : Vector3 {\n    const len = mag3(v);\n    return div3(v, len);\n}\n\n/* https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula */\nexport function roderigues(v: Vector3, axis: Vector3, angle: number) : Vector3 {\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n\n    const v1 = mult3(v, c);\n    const v2 = mult3(cross3(axis, v), s);\n    const v3 = mult3(axis, dot3(axis, v) * (1 - c));\n\n    return add3(add3(v1, v2), v3)\n}\n\nexport function alignVectorsAngleAxis(x: Vector3, y: Vector3) {\n    const xHat = normalize3(x);\n    const yHat = normalize3(y);\n    const rotationAxis  = normalize3(cross3(x,y));\n    const rotationAngle = acosClamped(dot3(xHat, yHat));\n    return {rotationAxis, rotationAngle}\n}\n\nexport function counterClockwiseAngleInPlane(x: Vector3, y: Vector3, normalDirection: Vector3) {\n    const {rotationAxis, rotationAngle} = alignVectorsAngleAxis(vec3(0, 0, 1), normalDirection);\n    const xPlane = roderigues(x, rotationAxis, rotationAngle);\n    const yPlane = roderigues(y, rotationAxis, rotationAngle);\n    const xAngle = Math.atan2(xPlane.y, xPlane.x);\n    const yAngle = Math.atan2(yPlane.y, yPlane.x);\n    return wrapAngle(yAngle - xAngle);\n}\n\n/* https://en.wikipedia.org/wiki/Euler_angles#Rotation_matrix */\nexport function zxz(v: Vector3, a1: number, a2: number, a3: number) : Vector3 {\n    const c1 = Math.cos(a1);\n    const c2 = Math.cos(a2);\n    const c3 = Math.cos(a3);\n\n    const s1 = Math.sin(a1);\n    const s2 = Math.sin(a2);\n    const s3 = Math.sin(a3);\n\n    const x = (c1*c3 - s1*c2*s3)*v.x + (-c1*s3 - s1*c2*c3)*v.y + (s1*s2)*v.z;\n    const y = (s1*c3 + c1*c2*s3)*v.x + (c1*c2*c3 - s1*s3)*v.y + (-c1*s2)*v.z;\n    const z = (s2*s3)*v.x + (s2*c3)*v.y + c2*v.z;\n\n    return {\n        x: x,\n        y: y,\n        z: z,\n    };\n}\n\n/* Coordinate Systems */\n\nexport function cartesianToSpherical(p: Vector3): Spherical {\n    const r = mag3(p);\n    const theta = Math.atan2(Math.sqrt(p.x * p.x + p.y * p.y), p.z);\n    const phi = Math.atan2(p.y, p.x);\n    return {r, theta, phi};\n}\n\nexport function sphericalToCartesian(p: Spherical) {\n    const x = p.r * Math.cos(p.phi) * Math.sin(p.theta);\n    const y = p.r * Math.sin(p.phi) * Math.sin(p.theta);\n    const z = p.r * Math.cos(p.theta);\n    return {x, y, z};\n}\n\n/* Dates & Times */\n\nexport function timeToCalendarDate(time: number, timeSettings: TimeSettings, yearOffset: number = 1, dayOffset: number = 1): CalendarDate {  \n    const m = 60;\n    const h = 3600;\n    const d = timeSettings.hoursPerDay * h;\n    const y = timeSettings.daysPerYear * d;\n\n    let secondsRemaining = time;\n    const year = Math.floor(secondsRemaining / y) + yearOffset;\n    secondsRemaining = secondsRemaining - y * (year - yearOffset);\n    const day = Math.floor(secondsRemaining / d ) + dayOffset;    \n    secondsRemaining = secondsRemaining - d * (day - dayOffset);\n    const hour = Math.floor(secondsRemaining / h);\n    secondsRemaining = secondsRemaining - h * hour;\n    const minute = Math.floor(secondsRemaining / m);\n    secondsRemaining = secondsRemaining - m * minute;\n    const second = Math.round(secondsRemaining);\n    return {\n        year,\n        day, \n        hour,\n        minute,\n        second\n    }\n}\n\nexport function calendarDateToTime(calendarDate: CalendarDate, timeSettings: TimeSettings, yearOffset: number = 0, dayOffset: number = 0): number {\n    const years   = calendarDate.year - yearOffset;\n    const days    = calendarDate.day  - dayOffset;\n    const hours   = calendarDate.hour;\n    return ( (timeSettings.daysPerYear * years + days) * timeSettings.hoursPerDay + hours ) * 3600;\n}\n\nexport function calendarDateToString(cd: CalendarDate): String {\n    return \"Year \".concat(String(cd.year), \", Day \", String(cd.day), \", \", ('0'+String(cd.hour)).slice(-2), \":\", ('0'+String(cd.minute)).slice(-2), \":\", ('0'+String(cd.second)).slice(-2));\n}\n\nexport function calendarDateToDurationString(cd: CalendarDate): String {\n    return String(cd.year).concat(cd.year === 1 ? \" Year, \" : \" Years, \", \n           String(cd.day), cd.day === 1 ? \" Day, \" : \" Days, \", \n           String(cd.hour), cd.hour === 1 ? \" hour, \" : \" hours, \", \n           String(cd.minute), cd.minute === 1 ? \" minute, and \" : \" minutes, and \", \n           String(cd.second), cd.second === 1 ? \" second\" : \" seconds\");\n}","import SolarSystem from \"./system\";\nimport Orbit from \"./orbit\";\nimport TransferCalculator from \"../libs/transfer-calculator\";\n\nexport class Porkchop implements IPorkchop {\n    readonly system:                SolarSystem;\n    readonly startOrbit:            Orbit;\n    readonly endOrbit:              Orbit;\n    readonly startDates:            number[];\n    readonly flightTimes:           number[];\n    readonly deltaVs:               number[][];\n    readonly ejectionInsertionType: \"simple\" | \"direct\" | \"oberth\";\n    readonly planeChange:           boolean;\n    readonly noInsertionBurn:       boolean;\n    readonly matchStartMo:          boolean;\n    readonly matchEndMo:            boolean;\n\n    constructor(inputs: IPorkchop) {\n        this.system = new SolarSystem(inputs.system.sun, inputs.system.orbiters);\n        this.startOrbit = new Orbit(inputs.startOrbit, this.system.bodyFromId(inputs.startOrbit.orbiting));\n        this.endOrbit = new Orbit(inputs.endOrbit, this.system.bodyFromId(inputs.endOrbit.orbiting));\n        this.startDates = inputs.startDates;\n        this.flightTimes = inputs.flightTimes;\n        this.deltaVs = inputs.deltaVs;\n\n        this.ejectionInsertionType = inputs.ejectionInsertionType;\n        this.planeChange     = inputs.planeChange;    \n        this.matchStartMo    = inputs.matchStartMo;\n        this.matchEndMo      = inputs.matchEndMo;     \n        this.noInsertionBurn = inputs.noInsertionBurn;\n    }\n\n    public get startBody() {\n        return this.system.bodyFromId(this.startOrbit.orbiting);\n    }\n\n    public get endBody() {\n        return this.system.bodyFromId(this.endOrbit.orbiting);\n    }\n\n    public get bestTimes() {\n        let bestDeltaV = Infinity;\n        let i_best = -1;\n        let j_best = -1;\n        for(let i = 0; i < this.deltaVs.length; i++) {\n            for(let j = 0; j < this.deltaVs[i].length; j++) {\n                if (this.deltaVs[i][j] < bestDeltaV) {\n                    bestDeltaV = this.deltaVs[i][j];\n                    i_best = i;\n                    j_best = j;\n                }\n            }\n        }\n        const bestStartDate = this.startDates[j_best];\n        const bestFlightTime = this.flightTimes[i_best];\n        return {bestStartDate, bestFlightTime};\n    }\n\n    public get bestTransfer() {\n        const best = this.bestTimes;\n        const transferCalc = new TransferCalculator({\n            system:          this.system,\n            startOrbit:      this.startOrbit,\n            endOrbit:        this.endOrbit,\n            startDate:       best.bestStartDate,\n            flightTime:      best.bestFlightTime,\n            startBody:       this.startBody, \n            endBody:         this.endBody,\n            planeChange:     this.planeChange,\n            matchStartMo:    this.matchStartMo,\n            matchEndMo:      this.matchEndMo,\n            noInsertionBurn: this.noInsertionBurn,\n        });\n        transferCalc.computeTransfer();\n        return transferCalc.transfer;\n    }\n}\n\nexport default Porkchop;","import TransferCalculator from \"./transfer-calculator\";\nimport { linspace } from \"./math\";\nimport Porkchop from \"../objects/porkchop\";\n\nclass PorkchopCalculator {\n    private readonly _system:       ISolarSystem;\n    private _sequenceUp!:           number[];\n    private _sequenceDown!:         number[];\n\n    private _startOrbit:            IOrbit;\n    private _endOrbit:              IOrbit;\n\n    private _startBody:             ICelestialBody;\n    private _endBody:               ICelestialBody;\n    private _transferBody!:         ICelestialBody;\n\n    private _startDateMin:          number;\n    private _startDateMax:          number;\n    private _startDates!:           number[];\n    private _nTimes:                number;\n\n    private _ejectionInsertionType: \"simple\" | \"direct\" | \"oberth\";\n    private _planeChange:           boolean;\n    private _matchStartMo:          boolean;\n    private _matchEndMo:            boolean;\n    private _noInsertionBurn:       boolean;\n\n    private _flightTimeMin:         number;\n    private _flightTimeMax:         number;\n    private _flightTimes!:          number[];\n\n    private _deltaVs!:              number[][];\n\n    constructor(inputs: PorkchopInputs) {\n        this._system        = inputs.system;\n        this._startOrbit    = inputs.startOrbit;\n        this._endOrbit      = inputs.endOrbit;\n        this._startBody     = this.bodyFromId(this._startOrbit.orbiting);\n        this._endBody       = this.bodyFromId(this._endOrbit.orbiting);\n        this._startDateMin  = inputs.startDateMin;\n        this._startDateMax  = inputs.startDateMax;\n        this._flightTimeMin = inputs.flightTimeMin;\n        this._flightTimeMax = inputs.flightTimeMax;\n        this._nTimes!       = inputs.nTimes;\n\n        this._ejectionInsertionType = inputs.ejectionInsertionType === undefined ? \"simple\" : inputs.ejectionInsertionType;\n        console.log(this._ejectionInsertionType)\n        this._planeChange     = inputs.planeChange     === undefined ? false : inputs.planeChange;    \n        this._matchStartMo    = inputs.matchStartMo    === undefined ? true  : inputs.matchStartMo;\n        this._matchEndMo      = inputs.matchEndMo      === undefined ? false : inputs.matchEndMo;     \n        this._noInsertionBurn = inputs.noInsertionBurn === undefined ? false : inputs.noInsertionBurn;\n    }\n\n    public get deltaVMatrix() {\n        return this._deltaVs;\n    }\n\n    public get startDates() {\n        return this._startDates;\n    }\n\n    public get flightTimes() {\n        return this._flightTimes;\n    }\n\n\n    public get data(): IPorkchop {\n        return {\n            system:                 this._system,\n            startOrbit:             this._startOrbit,\n            endOrbit:               this._endOrbit,\n            startDates:             this._startDates,\n            flightTimes:            this._flightTimes,\n            deltaVs:                this._deltaVs,\n            ejectionInsertionType:  this._ejectionInsertionType,\n            planeChange:            this._planeChange,\n            matchStartMo:           this._matchStartMo,\n            matchEndMo:             this._matchEndMo,\n            noInsertionBurn:        this._noInsertionBurn,\n        }\n    }\n\n    public get porkchop() {\n        return new Porkchop(this.data)\n    }\n\n    public get bestTimes() {\n        let bestDeltaV = Infinity;\n        let i_best = -1;\n        let j_best = -1;\n        for(let i = 0; i < this._deltaVs.length; i++) {\n            for(let j = 0; j < this._deltaVs[i].length; j++) {\n                if (this._deltaVs[i][j] < bestDeltaV) {\n                    bestDeltaV = this._deltaVs[i][j];\n                    i_best = i;\n                    j_best = j;\n                }\n            }\n        }\n        const bestStartDate = this.startDates[j_best];\n        const bestFlightTime = this.flightTimes[i_best];\n        return {bestStartDate, bestFlightTime};\n    }\n\n    public get bestTransfer(): ITransfer {\n        const best = this.bestTimes;\n        const transferCalc = new TransferCalculator({\n            system:                 this._system,\n            startOrbit:             this._startOrbit,\n            endOrbit:               this._endOrbit,\n            startDate:              best.bestStartDate,\n            flightTime:             best.bestFlightTime,\n            startBody:              this._startBody, \n            endBody:                this._endBody,\n            ejectionInsertionType:  this._ejectionInsertionType,\n            planeChange:            this._planeChange,\n            matchStartMo:           this._matchStartMo,\n            matchEndMo:             this._matchEndMo,\n            noInsertionBurn:        this._noInsertionBurn,\n        });\n        return transferCalc.data;\n    }\n\n    public computeAllDeltaVs() {\n        const startId = this._startBody.id;\n        const endId = this._endBody.id;\n        const transferId = this.commonAttractorId(startId, endId);\n        this._transferBody = this.bodyFromId(transferId);\n        \n        this.computeSequenceUp();\n        this.computeSequenceDown();\n\n        this.prepareTimes();\n\n        // initialize all delta Vs as infinity\n        const deltaVs: number[][] = [...Array(this._nTimes)].map(x=>Array(this._nTimes).fill(Infinity));\n\n        // fill the matrix with actual computed delta Vs\n        for(let i=0; i<this._nTimes; i++) {\n            const startDate = this._startDates[i];\n            for(let j=0; j<this._nTimes; j++) {\n                const flightTime = this._flightTimes[j];\n                const dv = this.computeTransferDeltaV(startDate, flightTime);\n                deltaVs[j][i] = dv;\n            }\n        }\n        this._deltaVs = deltaVs;\n    }\n\n    private computeTransferDeltaV(startDate: number, flightTime: number) {\n        const transferCalc = new TransferCalculator({\n            system:                 this._system,\n            startOrbit:             this._startOrbit,\n            endOrbit:               this._endOrbit,\n            startDate:              startDate,\n            flightTime:             flightTime,\n            sequenceUp:             this._sequenceUp,\n            sequenceDown:           this._sequenceDown,\n            startBody:              this._startBody, \n            endBody:                this._endBody, \n            transferBody:           this._transferBody,\n            ejectionInsertionType:  this._ejectionInsertionType,\n            planeChange:            this._planeChange,\n            matchStartMo:           this._matchStartMo,\n            matchEndMo:             this._matchEndMo,\n            noInsertionBurn:        this._noInsertionBurn,\n        });\n        return transferCalc.deltaV;\n    }\n\n    private bodyFromId(id: number) {\n        if(id === 0) {\n            return this._system.sun;\n        } else {\n            const body = this._system.orbiterIds.get(id);\n            if(!body)\n                throw new Error(`No body with id ${id}`);\n            return body;\n        }\n    }\n\n    public sequenceToSun(id: number) {\n        let bd = this.bodyFromId(id);\n        let seq: number[] = [bd.id];\n        while(bd.hasOwnProperty(\"orbiting\")) {\n            bd = this.bodyFromId((bd as IOrbitingBody).orbiting);\n            seq.push(bd.id);\n        }\n        return seq\n    }\n\n    public commonAttractorId(id1: number, id2: number) {\n        const sunSeq1 = this.sequenceToSun(id1);\n        const sunSeq2 = this.sequenceToSun(id2);\n        for(let i=0; i<sunSeq1.length; i++) {\n            if(sunSeq2.includes(sunSeq1[i])) {\n                return sunSeq1[i]\n            }\n        }\n        throw new Error('Bodies do not share a common attractor (error in defining this SolarSystem)')\n    }\n\n    private computeSequenceUp() {\n        let bd = this._startBody;\n        let seq: number[] = [this._startBody.id];\n        while(bd.id !== this._transferBody.id) {\n            if(bd.hasOwnProperty(\"orbiting\")) {\n                bd = this.bodyFromId((bd as IOrbitingBody).orbiting)\n                seq.push(bd.id)\n            } else {\n                throw new Error('The start body does not orbit around the transfer body')\n            }\n        }\n        this._sequenceUp = seq;\n    }\n    \n    private computeSequenceDown() {\n        let bd = this._endBody;\n        let seq: number[] = [this._endBody.id];\n        while(bd.id !== this._transferBody.id) {\n            if(bd.hasOwnProperty(\"orbiting\")) {\n                bd = this.bodyFromId((bd as IOrbitingBody).orbiting)\n                seq.push(bd.id)\n            } else {\n                throw new Error('The start body does not orbit around the transfer body')\n            }\n        }\n        this._sequenceDown = seq.reverse();\n    }\n\n    private prepareTimes() {\n        this._startDates = linspace(this._startDateMin, this._startDateMax, this._nTimes)\n        this._flightTimes = linspace(this._flightTimeMin, this._flightTimeMax, this._nTimes)\n    }\n\n}\n\nexport default PorkchopCalculator","import PorkchopCalculator from \"../main/libs/porkchop-calculator\";\n\ndeclare var self: DedicatedWorkerGlobalScope;\nexport {};\n\nfunction preparePorkchopPlotData(inputs: PorkchopInputs, timeSettings: TimeSettings): PorkchopPlotData {\n    const porkchopCalculator = new PorkchopCalculator(inputs);\n    porkchopCalculator.computeAllDeltaVs();\n    const porkchop = porkchopCalculator.data;\n\n    const deltaVs = porkchop.deltaVs;\n    const startDates = porkchop.startDates;\n    const flightTimes = porkchop.flightTimes;\n\n    const levelscale = 1.1;\n    const logLevelscale = Math.log(levelscale);\n    const nlevels = 16;\n\n    const minDV  = Math.min(...deltaVs.flat());\n\n    const levels = Array.from(Array(nlevels).keys()).map(i => minDV * (levelscale ** i))\n    const logLevels = levels.map(i => Math.log(i) / logLevelscale);\n\n    const logDeltaVs = deltaVs.map(i => i.map(j => Math.log(j) / logLevelscale));\n    // const logDeltaVs = deltaVs.map(i => i.map(j => j > levels[levels.length - 1] ? NaN : Math.log(j) / logLevelscale));\n\n    const secondsPerDay = 3600*timeSettings.hoursPerDay;\n    const startDays = startDates.map(i => i / secondsPerDay);\n    const flightDays = flightTimes.map(i => i / secondsPerDay)\n\n    const tickLabels = levels.map(i => Math.floor(i).toString());\n\n    const bestTransfer = porkchopCalculator.bestTransfer;\n\n    const transferStartDay = bestTransfer.startDate / secondsPerDay;\n    const transferFlightDay = bestTransfer.flightTime / secondsPerDay;\n\n    return {\n        deltaVs,\n        startDates,\n        flightTimes,\n        logDeltaVs,\n        startDays,\n        flightDays,\n        levels,\n        logLevels,\n        tickLabels,\n        bestTransfer,\n        transferStartDay,\n        transferFlightDay,\n    }\n}\n\nself.onmessage = (event: MessageEvent<{inputs: PorkchopInputs, timeSettings: TimeSettings}>) => {\n    const {inputs, timeSettings} = event.data;\n    const plotData = preparePorkchopPlotData(inputs, timeSettings)\n    self.postMessage(plotData)    \n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [774,315], function() { return __webpack_require__(3936); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"315\":\"9996fa4e\",\"774\":\"b0806af3\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/Kerbal-Transfer-Illustrator/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t936: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkkerbal_transfer_illustrator\"] = self[\"webpackChunkkerbal_transfer_illustrator\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([\n\t\t__webpack_require__.e(774),\n\t\t__webpack_require__.e(315)\n\t]).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["X_DIR","vec3","Y_DIR","Z_DIR","TWO_PI","Math","PI","HALF_PI","linspace","start","stop","n","floor","interval","vals","Array","i","clamp","x","min","max","degToRad","deg","wrapAngle","angle","circles","acosClamped","acos","copysign","y","isnegative","randomSign","round","random","lerp","t","z","mult3","v","f","div3","add3","u","sub3","dot3","cross3","magSq3","mag3","sqrt","normalize3","roderigues","axis","c","cos","s","sin","v1","v2","v3","alignVectorsAngleAxis","xHat","yHat","rotationAxis","rotationAngle","counterClockwiseAngleInPlane","normalDirection","xPlane","yPlane","xAngle","atan2","zxz","a1","a2","a3","c1","c2","c3","s1","s2","s3","cartesianToSpherical","p","r","theta","phi","sphericalToCartesian","inputs","system","startOrbit","endOrbit","startDates","flightTimes","deltaVs","ejectionInsertionType","planeChange","noInsertionBurn","matchStartMo","matchEndMo","this","SolarSystem","sun","orbiters","Orbit","bodyFromId","orbiting","bestDeltaV","Infinity","i_best","j_best","length","j","bestStartDate","bestFlightTime","best","bestTimes","transferCalc","TransferCalculator","startDate","flightTime","startBody","endBody","computeTransfer","transfer","PorkchopCalculator","_system","_sequenceUp","_sequenceDown","_startOrbit","_endOrbit","_startBody","_endBody","_transferBody","_startDateMin","_startDateMax","_startDates","_nTimes","_ejectionInsertionType","_planeChange","_matchStartMo","_matchEndMo","_noInsertionBurn","_flightTimeMin","_flightTimeMax","_flightTimes","_deltaVs","startDateMin","startDateMax","flightTimeMin","flightTimeMax","nTimes","undefined","console","log","Porkchop","data","startId","id","endId","transferId","commonAttractorId","computeSequenceUp","computeSequenceDown","prepareTimes","map","fill","dv","computeTransferDeltaV","sequenceUp","sequenceDown","transferBody","deltaV","body","orbiterIds","get","Error","bd","seq","hasOwnProperty","push","id1","id2","sunSeq1","sequenceToSun","sunSeq2","includes","reverse","self","onmessage","event","plotData","timeSettings","porkchopCalculator","computeAllDeltaVs","porkchop","logLevelscale","minDV","flat","levels","from","keys","logLevels","logDeltaVs","secondsPerDay","hoursPerDay","startDays","flightDays","tickLabels","toString","bestTransfer","transferStartDay","transferFlightDay","preparePorkchopPlotData","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","fulfilled","Object","every","key","splice","d","definition","o","defineProperty","enumerable","e","chunkId","Promise","all","reduce","promises","miniCssF","obj","prop","prototype","call","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}